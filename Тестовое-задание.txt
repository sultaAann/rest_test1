### Тестовое задание: API для управления задачами

**Задача**: реализовать REST API для to-do приложения.

---

### Требуемый функционал

#### Модель задачи:

* `id`: int
* `title`: str
* `description`: str
* `is_completed`: bool (по умолчанию `False`)
* `created_at`: datetime
* `updated_at`: datetime

---

### Эндпоинты:

1. `POST /tasks/` — создать задачу
2. `GET /tasks/` — получить список всех задач
3. `GET /tasks/{id}/` — получить задачу по ID
4. `PUT /tasks/{id}/` — обновить задачу
5. `DELETE /tasks/{id}/` — удалить задачу

---

### Требования:

* Язык: Python 3.10+
* Фреймворк: Flask или FastAPI
* База данных: SQLite или PostgreSQL
* ORM: SQLAlchemy, Tortoise или Peewee
* Формат ответа: JSON
* HTTP-статусы: соответствующие действию
* Использование Git, разумные коммиты

---

### Дополнительно (по желанию):

* Swagger-документация (если FastAPI)
* Пагинация списка
* Docker или docker-compose
* Простые юнит-тесты (pytest)

---

### Что предоставить:

* Ссылка на репозиторий (GitHub/GitLab)
* `README.md` с инструкцией по запуску
* Код с комментариями, где это оправдано

---

### Срок выполнения: 1–2 дня

Критерий оценки — чистота и полнота реализации.
